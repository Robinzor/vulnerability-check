Function Get-CVSS(){
    param(
    [Parameter()]
    [string]$Query
    )
    Start-Sleep -s 6
    $Query = $args
    $url = "https://services.nvd.nist.gov/rest/json/cves/2.0?cveId="
    $request = (invoke-webrequest $url$Query | ConvertFrom-Json)
    # Check for for metric version
    $MetricV31 = $request.vulnerabilities.cve.metrics.cvssMetricV31
    $MetricV30 = $request.vulnerabilities.cve.metrics.cvssMetricV30
    $MetricV2 = $request.vulnerabilities.cve.metrics.cvssMetricV2
    # Check for multiplescores
    $Manufacturer = $false

    if ($null -ne $MetricV31){
        $CVSSbase = $MetricV31[0].cvssData.baseScore
        $CVSSexploit = $MetricV31[0].exploitabilityScore
        $CVSSimpact = $MetricV31[0].impactScore
        if ($null -ne $MetricV31[1]){
            $Manufacturer = $true
            $Manufacturerbase = $MetricV31[1].cvssData.baseScore
            # check if exploitscore is present
            try {$Manufacturerexploit = $Metric31[1].exploitabilityScore}
            catch { $Manufacturerexploit = "None"}
            $Manufacturerimpact = $MetricV31[1].impactScore
        }
    }

    if ($null -ne $MetricV30){
        $CVSSbase = $MetricV30[0].cvssData.baseScore
        $CVSSexploit = $MetricV30[0].exploitabilityScore
        $CVSSimpact = $MetricV30[0].impactScore
        if ($null -ne $MetricV30[1]){
            $Manufacturer = $true
            $Manufacturerbase = $MetricV30[1].cvssData.baseScore
            # check if exploitscore is present
            try {$Manufacturerexploit = $MetricV30[1].exploitabilityScore}
            catch { $Manufacturerexploit = "None"}
            $Manufacturerimpact = $MetricV30[1].impactScore
        }
    }

    if ($null -ne $MetricV2){
        $CVSSbase = $MetricV2[0].cvssData.baseScore
        $CVSSexploit = $MetricV2[0].exploitabilityScore
        $CVSSimpact = $MetricV2[0].impactScore
        # Check for Manufacturer
        if ($null -ne $MetricV2[1]){
        $Manufacturer = $true
        $Manufacturerbase = $MetricV2[1].cvssData.baseScore
        try {$Manufacturerexploit = $MetricV2[1].exploitabilityScore}
        catch { $Manufacturerexploit = "None"}
        $Manufacturerimpact = $MetricV2[1].impactScore
        }
    }
    $Output = "$args Base:$CVSSbase Exploit:$CVSSexploit Impact:$CVSSimpact"
    if ($Manufacturer -eq $true){$Output += " (Manufacturer:$Manufacturerbase-$Manufacturerexploit-$Manufacturerimpact)"}
    #Write-Host $output
    return $output
}

Get-CVSS